{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CArCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAEF,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cAEAC,EAAkBC,OAAOL,EAAMM,OAC/BC,EAAiBF,OAAOJ,EAAKK,OAC7BE,EAAmBH,OAAOH,EAAOI,OAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAkBC,GAAK,EAAG,CAE7CzB,EAAcyB,EADGL,GAAmBK,EAAI,GAAKF,GAE1CG,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAE/D2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,G,CAGlEW,EAAEM,cAAcY,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  const delayInputValue = Number(delay.value);\n  const stepInputValue = Number(step.value);\n  const amountInputValue = Number(amount.value);\n\n  for (let i = 1; i <= amountInputValue; i += 1) {\n    const newDelay = delayInputValue + (i - 1) * stepInputValue;\n    createPromise(i, newDelay)\n      .then(({ position, delay }) => {\n       Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","delayInputValue","Number","value","stepInputValue","amountInputValue","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.062e1634.js.map"}